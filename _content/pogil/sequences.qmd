# Lists (POGIL, 10 min)

A variable can hold multiple values in the form of a *list*. The values are separated by commas and wrapped in square brackets. For example:

```
primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
```

Each *element* of the list can be referenced by an *index*, which is the sequential position starting at 0. For example, `primes[4]` is 11.

 index |  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |
-------|----|----|----|----|----|----|----|----|----|----|
 value |  2 |  3 |  5 |  7 | 11 | 13 | 17 | 19 | 23 | 29 |

**Do not type anything yet! Read the questions first!**

| Python code           | Shell output                                     |
|-----------------------|--------------------------------------------------|
| `odd = [1, 3, 5, 7]`  | \TextField[width=2.5cm, name=seq_ans1]{}         |
| `odd`                 | \TextField[width=2.5cm, name=seq_ans2]{}         |
| `odd[2]`              | \TextField[width=2.5cm, name=seq_ans3]{}         |
| `odd[4]`              | \TextField[width=2.5cm, name=seq_ans4]{}         |
| `len(odd)`            | \TextField[width=2.5cm, name=seq_ans5]{}         |
| `number = odd[1]`     | \TextField[width=2.5cm, name=seq_ans6]{}         |
| `number`              | \TextField[width=2.5cm, name=seq_ans7]{}         |
| `odd[1] = 2`          | \TextField[width=2.5cm, name=seq_ans8]{}         |
| `odd`                 | \TextField[width=2.5cm, name=seq_ans9]{}         |
| `number`              | \TextField[width=2.5cm, name=seq_ans10]{}        |

1. What is the index of the second element of primes? What is the value at that index?

\TextField[width=\linewidth, name=seq_ans11]{}
<!-- The index is 1. The value is 3. -->

1. How does the index number compare to the position of the element?

\TextField[width=\linewidth, name=seq_ans12]{}
<!-- One less â€” index zero is the first element. -->

3. Type each line of code in a Python Shell and write the corresponding output in the space above. If an error occurs, write what type of error. Place an asterisk (*) next to any output for which you were surprised.

4. How did you reference the value of the 3rd element of odd?

\TextField[width=\linewidth, name=seq_ans13]{}
<!-- `odd[2]` -->

5. What did the output of the len() function tell you about the list?

\TextField[width=\linewidth, name=seq_ans14]{}
<!-- The length of the list. -->

6. One of the lines displayed an error. Explain the reason for the error.

\TextField[multiline=true, width=\linewidth, height=2.5em, name=seq_ans15]{}
<!-- It says "IndexError: list index out of range". The maximum index is 3 (i.e., length - 1), so 4 is too big. -->

7. Write a statement that assigns a list of three integers to the variable run.

\TextField[width=\linewidth, name=seq_ans16]{}
<!-- `run = [1, 2, 3]` -->

8. Write a statement that assigns the value 100 to the last element of run.

\TextField[multiline=true, width=\linewidth, height=3.75em, name=seq_ans17]{}
<!-- `run[2] = 100`  
*or* `run[-1] = 100` -->

9. Write a statement that stores the first value of run to a variable named first.

\TextField[width=\linewidth, name=seq_ans18]{}
<!-- `first = run[0]` -->

# Sequence types (POGIL, 15 min)

Lists and strings are examples of *sequence* types. Complete the table below to explore how sequences work.

| Python code                | Shell output                                         |
|----------------------------|------------------------------------------------------|
| `seq1 = "one two"`         | \TextField[width=2.5cm, name=seq_ans19]{}            |
| `type(seq1)`               | \TextField[width=2.5cm, name=seq_ans20]{}            |
| `len(seq1)`                | \TextField[width=2.5cm, name=seq_ans21]{}            |
| `seq1[1]`                  | \TextField[width=2.5cm, name=seq_ans22]{}            |
| `seq1[1] = chr(1)`         | \TextField[width=2.5cm, name=seq_ans23]{}            |
| `seq2 = "one", "two"`      | \TextField[width=2.5cm, name=seq_ans24]{}            |
| `type(seq2)`               | \TextField[width=2.5cm, name=seq_ans25]{}            |
| `len(seq2)`                | \TextField[width=2.5cm, name=seq_ans26]{}            |
| `seq2[1]`                  | \TextField[width=2.5cm, name=seq_ans27]{}            |
| `seq2[1] = chr(1)`         | \TextField[width=2.5cm, name=seq_ans28]{}            |
| `seq3 = ["one", "two"]`    | \TextField[width=2.5cm, name=seq_ans29]{}            |
| `type(seq3)`               | \TextField[width=2.5cm, name=seq_ans30]{}            |
| `seq3[1]`                  | \TextField[width=2.5cm, name=seq_ans31]{}            |
| `seq3[1] = 1`              | \TextField[width=2.5cm, name=seq_ans32]{}            |
| `seq4 = ("one", 1)`        | \TextField[width=2.5cm, name=seq_ans33]{}            |
| `type(seq4)`               | \TextField[width=2.5cm, name=seq_ans34]{}            |
| `number = 12345`           | \TextField[width=2.5cm, name=seq_ans35]{}            |
| `number[3]`                | \TextField[width=2.5cm, name=seq_ans36]{}            |

## Questions (15 min)

1. How does a sequence type differ from a number? (See the last row of the table.)

\TextField[multiline=true, width=\linewidth, height=2.5em, name=seq_ans37]{}
<!-- The value of each element of a sequence is accessible by an index -->

2. What are the names of the three sequence types introduced?

\TextField[width=\linewidth, name=seq_ans38]{}
<!-- list, string, and tuple -->

3. How does the syntax of creating a tuple differ from creating a list?

\TextField[multiline=true, width=\linewidth, height=2.5em, name=seq_ans39]{}
<!-- Tuples use parentheses, and lists use square brackets. -->

4. Is there more than one way (syntax) to create a tuple? Justify your answer.

\TextField[multiline=true, width=\linewidth, height=3.75em, name=seq_ans40]{}
<!-- Yes, the parentheses are optional as long as you use the comma operator. For example, the variable `seq2` is a tuple. -->

5. Which sequence types allow their elements to be changed? Which do not?

\TextField[multiline=true, width=\linewidth, height=2.5em, name=seq_ans41]{}
<!-- Only lists allow elements to be changed; strings and tuples do not support assignment. -->

6. Is it possible to store values of different types in a sequence? If yes, give an example from the table; if no, explain why not.

\TextField[multiline=true, width=\linewidth, height=2.5em, name=seq_ans42]{}
<!-- Yes; the `seq4` tuple ("one", 1) stores both a string and an integer. -->

7. Summarize the difference between lists and tuples. How do they look differently, and how do they work differently?

\TextField[multiline=true, width=\linewidth, height=3.75em, name=seq_ans43]{}
<!-- Tuples use parentheses, but lists use square brackets. Tuples cannot be modified, but lists can be modified. -->