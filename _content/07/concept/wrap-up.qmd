# Wrap-up: everything we saw

+-----------------------------+------------------------------------+------------------------------------------------------+
| Unit                        | Concepts                           | Perspectives                                         |
+=============================+====================================+======================================================+
| 1\. Introduction            | \- program\                        | \- programs and code are forms of wisdom             |
|                             | - computation\                     |                                                      |
|                             | - programming language\            |                                                      |
|                             | - running python\                  |                                                      |
|                             | - objects and variables\           |                                                      |
|                             | - assignments\                     |                                                      |
|                             | - input/output                     |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 2\. Expressions             | \- operators\                      | \- translating our intentions to code is not simple\ |
|                             | - overflow\                        | - hospitable code                                    |
|                             | - constants\                       |                                                      |
|                             | - math module\                     |                                                      |
|                             | - random numbers\                  |                                                      |
|                             | - comments\                        |                                                      |
|                             | - programming style                |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 3\. Conditionals            | \- if\                             | \- discrimination: encoding with justice\            |
|                             | - else\                            | - algorithmic intelligence                           |
|                             | - elif\                            |                                                      |
|                             | - nested if\                       |                                                      |
|                             | - comparison operators\            |                                                      |
|                             | - boolean operators                |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 4\. Loops                   | \- while\                          | \- scaling and halting problem\                      |
|                             | - for\                             | - the ethics of automation                           |
|                             | - break and continue\              |                                                      |
|                             | - nested loops\                    |                                                      |
|                             | - range\                           |                                                      |
|                             | - accumulators\                    |                                                      |
|                             | - flags\                           |                                                      |
|                             | - recursion                        |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 5\. Data structures, part 1 | \- lists\                          | \- values in representations\                        |
|                             | - tuples\                          | - the seduction of transparency                      |
|                             | - dictionaries\                    |                                                      |
|                             | - memory issues\                   |                                                      |
|                             | - membership operators             |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 6\. Functions               | \- abstraction\                    | \- functions are mediators of action                 |
|                             | - flow of execution\               |                                                      |
|                             | - input: parameters\               |                                                      |
|                             | - output: return\                  |                                                      |
|                             | - variable scope\                  |                                                      |
|                             | - docstrings                       |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 7\. Classes                 | \- object-orientation\             | \- questions on the internet of things\              |
|                             | - attributes and methods\          | - network power                                      |
|                             | - constructors\                    |                                                      |
|                             | - self parameter\                  |                                                      |
|                             | - class methods\                   |                                                      |
|                             | - the str method\                  |                                                      |
|                             | - operator overloading\            |                                                      |
|                             | - inheritance                      |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 8\. Data structures again   | \- slicing\                        | \- free, libre and open source software              |
|                             | - iterating\                       |                                                      |
|                             | - list comprehensions\             |                                                      |
|                             | - sets\                            |                                                      |
|                             | - string processing\               |                                                      |
|                             | - event handlers                   |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 9\. Modules                 | \- importing modules\              | \- cooperation and programming communities           |
|                             | - finding modules\                 |                                                      |
|                             | - namespaces\                      |                                                      |
|                             | - version control systems          |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 10\. File handling          | \- operating system\               | \- data journeys                                     |
|                             | - os module\                       |                                                      |
|                             | - reading and writing\             |                                                      |
|                             | - serialization\                   |                                                      |
|                             | - file standards\                  |                                                      |
|                             | - pandas dataframes\               |                                                      |
|                             | - context managers                 |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 11\. Error handling         | \- try, except, else, and finally\ | \- responsibility attribution in errors              |
|                             | - unit testing                     |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 12\. GUIs                   | \- UI elements\                    | \- interaction design as liturgies                   |
|                             | - guizero\                         |                                                      |
|                             | - interaction design               |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 13\. Scientific computing   | \- numpy\                          | \- computer simulations\                             |
|                             | - scipy\                           | - reproducibility in science\                        |
|                             | - matplotlib\                      | - multi-aspectual software analysis                  |
|                             | - jupyter                          |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+
| 14\. Conclusion             | \- pygame\                         | \- virtues and vices in programming                  |
|                             | - other programming paradigms\     |                                                      |
|                             | - computing beyond CS-108          |                                                      |
+-----------------------------+------------------------------------+------------------------------------------------------+

# Things we didn't see (and could)

-   [Decorators](https://www.geeksforgeeks.org/decorators-in-python/)
-   [Bit manipulation](https://medium.com/@shreya2202shri/bit-manipulation-in-python-a-beginners-guide-a7eaf4ddc92b)
-   [Functional programming](https://docs.python.org/3/howto/functional.html) in Python
-   More [software patterns](https://refactoring.guru/design-patterns)
-   More on code debugging
-   Code refactoring methods
-   Searching for programming information in web (documentation, stackoverflow)
-   More [scientific programming examples](https://scipython.com/)
-   [Examples on accessible computing](https://bookish.press/tac)
-   Examples on image processing or music synthesis

# Beyond CS-108

-   Theory of computation and programming languages
-   Algorithms and data structures (sorting, search, optimization)
-   Numerical methods
-   Computational modeling and simulation
-   Machine learning
-   Multimedia processing
-   Computer graphics
-   Computational geometry
-   Software engineering
-   Human-computer interaction
-   Web, cloud and mobile development
-   Operating systems
-   Databases
-   Networks and cybersecurity
-   Parallel and distributed computing
-   Computer architecture
-   Computer science ethics
-   Philosophy of computing and software studies
-   Psychology of programming
